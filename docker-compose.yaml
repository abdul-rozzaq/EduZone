

services:
  database:
    image: postgres:17.5
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: .
    depends_on:
      database:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8080:8000"
    volumes:
      - ./media:/app/media
      - static_data:/app/static_files
    command: >
      sh -c "python manage.py migrate &&
          python manage.py loaddata fixtures/regions.json &&
          python manage.py collectstatic --noinput &&
          gunicorn config.wsgi:application --bind 0.0.0.0:8000"
  
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - /etc/letsencrypt/live/:/etc/letsencrypt/live/
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./media:/app/media
      - static_data:/app/static

volumes:
  postgres_data:
  static_data:
